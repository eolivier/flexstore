name: Deploy Kotlin backend to Cloud Run

on:
  push:
    branches: [ "main" ]
    paths:
      - "app/**"
      - "domain/**"
      - "infra/**"
      - "spring-infra/**"
      - "build.gradle.kts"
      - "settings.gradle.kts"
      - ".github/workflows/kotlin-cloudrun.yml"
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # nécessaire pour l'auth OIDC si vous passez en WIF plus tard

    env:
      REGION: europe-west1
      SERVICE: flexstore-api
      REPO: apps
      IMAGE: europe-west1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/apps/flexstore-api:${{ github.sha }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Auth avec une clé de compte de service JSON (simple à démarrer).
      # Alternative (recommandée plus tard) : Workload Identity Federation.
      - name: Google Auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup gcloud
        uses: google-github-actions/setup-gcloud@v2

      - name: Enable required services (idempotent)
        run: |
          gcloud services enable artifactregistry.googleapis.com run.googleapis.com cloudbuild.googleapis.com

      # Build l'image depuis le dossier 'app' avec les Buildpacks Java
      - name: Build container with Buildpacks
        run: |
          gcloud builds submit app --pack image=$IMAGE

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy "$SERVICE" \
            --region "$REGION" \
            --image "$IMAGE" \
            --allow-unauthenticated \
            --platform managed \
            --port 8080 \
            --memory 512Mi \
            --cpu 1

      - name: Output service URL
        run: |
          URL=$(gcloud run services describe "$SERVICE" --region "$REGION" --format='value(status.url)')
          echo "Deployed: $URL"
